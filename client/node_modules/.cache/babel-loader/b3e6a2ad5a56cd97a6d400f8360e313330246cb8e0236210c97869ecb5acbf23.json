{"ast":null,"code":"// client/src/App.js\n// { useState }：React のフックのひとつで、コンポーネント内で「状態」を管理するために使われます。たとえば、ログイン状態などを管理するために利用されます。\nimport React,{useState}from'react';// BrowserRouter：Web ブラウザのアドレスバーを使ってルーティング（ページ遷移）を管理するためのコンポーネントです。\n// as Router：BrowserRouter を Router という名前で使うという意味です。\n// Routes：ルート（URL パス）ごとにどのコンポーネントを表示するかをまとめるコンテナです。\n// Route：個々のルートを定義するためのコンポーネントです。\n// Navigate：特定の条件に応じて、他のルートへ強制的にリダイレクト（移動）するために使います。\nimport{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';// 自分で作成した各コンポーネントのファイルから、それぞれのコンポーネントをインポートしています。\nimport Login from'./Login';import Dashboard from'./Dashboard';import AccountManagement from'./AccountManagement';import MemberManagement from'./MemberManagement';import Header from'./components/Header';import Footer from'./components/Footer';import HomePage from'./pages/HomePage';import ProfilePage from'./pages/ProfilePage';import OBOGProfilePage from'./pages/OBOGProfilePage';import ResultPage from'./pages/ResultPage';import SchedulePage from'./pages/SchedulePage';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// 認証状態と操作者（operator）の状態を管理\nconst[isAuthenticated,setIsAuthenticated]=useState(false);const[operator,setOperator]=useState('');return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"main\",{children:/*#__PURE__*/_jsxs(Routes,{children:[\"// \\u4EE5\\u4E0B\\u3067\\u30D1\\u30B9\\u306E\\u69CB\\u6210\\u3092\\u5B9A\\u7FA9\\u3057\\u3066\\u3044\\u307E\\u3059\\u3002\",/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProfilePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile/obog\",element:/*#__PURE__*/_jsx(OBOGProfilePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/results\",element:/*#__PURE__*/_jsx(ResultPage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/schedule\",element:/*#__PURE__*/_jsx(SchedulePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/tool\",element:isAuthenticated?/*#__PURE__*/_jsx(Navigate,{to:\"/dashboard\"}):/*#__PURE__*/_jsx(Login,{setIsAuthenticated:setIsAuthenticated,setOperator:setOperator})}),/*#__PURE__*/_jsx(Route,{path:\"/tool/dashboard\",element:isAuthenticated?/*#__PURE__*/_jsx(Dashboard,{operator:operator}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/tool/account-management\",element:isAuthenticated?/*#__PURE__*/_jsx(AccountManagement,{operator:operator}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})}),/*#__PURE__*/_jsx(Route,{path:\"/tool/member-management\",element:isAuthenticated?/*#__PURE__*/_jsx(MemberManagement,{operator:operator}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})}),/*#__PURE__*/_jsx(Footer,{})]});}// App コンポーネントを他のファイルでインポートできるように公開（エクスポート）しています。\nexport default App;","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Login","Dashboard","AccountManagement","MemberManagement","Header","Footer","HomePage","ProfilePage","OBOGProfilePage","ResultPage","SchedulePage","jsx","_jsx","jsxs","_jsxs","App","isAuthenticated","setIsAuthenticated","operator","setOperator","children","path","element","to"],"sources":["C:/Users/mygoodnote/OneDrive - 東京都市大学 Tokyo City University/デスクトップ/work/React/LoginSystem/client/src/App.js"],"sourcesContent":["// client/src/App.js\r\n\r\n// { useState }：React のフックのひとつで、コンポーネント内で「状態」を管理するために使われます。たとえば、ログイン状態などを管理するために利用されます。\r\nimport React, { useState } from 'react';\r\n// BrowserRouter：Web ブラウザのアドレスバーを使ってルーティング（ページ遷移）を管理するためのコンポーネントです。\r\n// as Router：BrowserRouter を Router という名前で使うという意味です。\r\n// Routes：ルート（URL パス）ごとにどのコンポーネントを表示するかをまとめるコンテナです。\r\n// Route：個々のルートを定義するためのコンポーネントです。\r\n// Navigate：特定の条件に応じて、他のルートへ強制的にリダイレクト（移動）するために使います。\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\n// 自分で作成した各コンポーネントのファイルから、それぞれのコンポーネントをインポートしています。\r\nimport Login from './Login';\r\nimport Dashboard from './Dashboard';\r\nimport AccountManagement from './AccountManagement';\r\nimport MemberManagement from './MemberManagement';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport HomePage from './pages/HomePage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport OBOGProfilePage from './pages/OBOGProfilePage';\r\nimport ResultPage from './pages/ResultPage';\r\nimport SchedulePage from './pages/SchedulePage';\r\n\r\nfunction App() {\r\n  // 認証状態と操作者（operator）の状態を管理\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [operator, setOperator] = useState('');\r\n\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <main>\r\n        <Routes>\r\n        // 以下でパスの構成を定義しています。\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route path=\"/profile\" element={<ProfilePage />} />\r\n          <Route path=\"/profile/obog\" element={<OBOGProfilePage />} />\r\n          <Route path=\"/results\" element={<ResultPage />} />\r\n          <Route path=\"/schedule\" element={<SchedulePage />} />\r\n          <Route path=\"/tool\" element={isAuthenticated ? (<Navigate to=\"/dashboard\" />) : (<Login setIsAuthenticated={setIsAuthenticated} setOperator={setOperator} />)} />\r\n          <Route path=\"/tool/dashboard\" element={isAuthenticated ? <Dashboard operator={operator} /> : <Navigate to=\"/\" />} />\r\n          <Route path=\"/tool/account-management\" element={isAuthenticated ? <AccountManagement operator={operator} /> : <Navigate to=\"/\" />} />\r\n          <Route path=\"/tool/member-management\" element={isAuthenticated ? <MemberManagement operator={operator} /> : <Navigate to=\"/\" />}\r\n          />\r\n        </Routes>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\n// App コンポーネントを他のファイルでインポートできるように公開（エクスポート）しています。\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}