{"ast":null,"code":"// src/pages/OBOGProfilePage.js\nimport React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function OBOGProfilePage(){const[members,setMembers]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// コンポーネントマウント時に API から部員データを取得\nuseEffect(()=>{fetch('/api/members').then(response=>{if(!response.ok){throw new Error('ネットワークエラーです');}return response.json();}).then(data=>{setMembers(data);setLoading(false);}).catch(err=>{console.error('データ取得エラー:',err);setError(err);setLoading(false);});},[]);// 現在の年から1965を引いた値を上限としてグループを作成する\nlet currentYear=new Date().getFullYear();// 現在の月が1月～3月の場合（month: 0～2）なら、まだ4月になっていないので、前年度を学年として扱う\nif(new Date().getMonth()<3){currentYear=currentYear-1;}const maxGeneration=currentYear-1965;// 例：2025年なら95\n// 1 〜maxGeneration までの各年齢ごとに空の配列を初期化\nconst groupsByGeneration={};for(let generation=1;generation<=maxGeneration;generation++){groupsByGeneration[generation]=[];}// 読み込んだ各部員の generation（文字列なので Number() で変換）をキーとしてグループ化\nmembers.forEach(member=>{const memberGeneration=Number(member.generation);// 1〜maxGeneration の範囲内ならグループに追加\nif(memberGeneration>=1&&memberGeneration<=maxGeneration){groupsByGeneration[memberGeneration].push(member);}});if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\"\\u30C7\\u30FC\\u30BF\\u3092\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D\\u3067\\u3059\\u2026\"});}if(error){return/*#__PURE__*/_jsx(\"p\",{children:\"\\u30C7\\u30FC\\u30BF\\u306E\\u53D6\\u5F97\\u306B\\u5931\\u6557\\u3057\\u307E\\u3057\\u305F\\u3002\"});}return/*#__PURE__*/_jsx(\"div\",{id:\"profile\",className:\"big-bg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"profile-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-explain\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/shamen.jpg\",alt:\"\\u659C\\u9762\\u6253\\u8D77\\u3057\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u73FE\\u5728\\u659C\\u9762\\u6253\\u8D77\\u3057\\u3067\\u5F15\\u3044\\u3066\\u3044\\u308B\\u65B9\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/syoumen1.jpg\",alt:\"\\u6B63\\u9762\\u6253\\u8D77\\u3057\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u73FE\\u5728\\u6B63\\u9762\\u6253\\u8D77\\u3057\\u3067\\u5F15\\u3044\\u3066\\u3044\\u308B\\u65B9\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sub-menu\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u30E1\\u30CB\\u30E5\\u30FC\"}),/*#__PURE__*/_jsx(\"div\",{children:Object.keys(groupsByGeneration).sort((a,b)=>Number(b)-Number(a))// 数値として降順にソート\n.map(generationKey=>{const generationGroup=groupsByGeneration[generationKey];if(generationGroup.length===0)return null;// その年齢の部員がいなければ表示しない\nreturn/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"a\",{href:`#${generationKey}generation`,children:[generationKey,\"\\u4EE3\"]})},generationKey);})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u540D\\u7C3F\\u304C\\u624B\\u306B\\u5165\\u308A\\u6B21\\u7B2C\\u3001\\u968F\\u6642\\u66F4\\u65B0\\u3057\\u3066\\u3044\\u304D\\u307E\\u3059\\u3002\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-generation\",children:/*#__PURE__*/_jsx(\"p\",{children:\"\\u76E3\\u7763\\u30FB\\u30B3\\u30FC\\u30C1\\u30FB\\u9867\\u554F\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-table\",style:{justifyContent:'space-around'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"profile-set\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/shamen.jpg\",alt:\"\\u659C\\u9762\\u6253\\u8D77\\u3057\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name man-C\",children:\"\\u6E21\\u8FBA \\u6D0B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-position\",children:\"\\u76E3\\u7763\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-department\",children:\"----\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-set\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/shamen.jpg\",alt:\"\\u659C\\u9762\\u6253\\u8D77\\u3057\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name man-C\",children:\"\\u4E8C\\u898B \\u5BCC\\u58EB\\u592B\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-position\",children:\"\\u30B3\\u30FC\\u30C1\\u30FB\\u4F1A\\u8A08\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-department\",children:\"----\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-set\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/shamen.jpg\",alt:\"\\u659C\\u9762\\u6253\\u8D77\\u3057\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name man-C\",children:\"\\u4F50\\u85E4 \\u660E\\u535A\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-position\",children:\"\\u30B3\\u30FC\\u30C1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-department\",children:\"----\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-set\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/shamen.jpg\",alt:\"\\u659C\\u9762\\u6253\\u8D77\\u3057\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name man-C\",children:\"\\u4F50\\u85E4 \\u79C0\\u61B2\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-position\",children:\"\\u30B3\\u30FC\\u30C1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-department\",children:\"----\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-set\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/kyudobu_img/shiro.jpg\",alt:\"\\u767D\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"profile-name man-C\",children:\"\\u767D\\u6728 \\u5C1A\\u4EBA\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-position\",children:\"\\u9867\\u554F(\\u6559\\u6388)\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-department\",children:\"\\u6A5F\\u68B0\\u5DE5\\u5B66\\u79D1\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{children:Object.keys(groupsByGeneration).sort((a,b)=>Number(b)-Number(a))// 数値として降順にソート\n.map(generationKey=>{const generationGroup=groupsByGeneration[generationKey];if(generationGroup.length===0)return null;// その年齢の部員がいなければ表示しない\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"profile-group\",children:[/*#__PURE__*/_jsx(\"div\",{id:`${generationKey}generation`,className:\"profile-year\"}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-generation\",children:/*#__PURE__*/_jsxs(\"p\",{children:[generationKey,\"\\u4EE3\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-table\",children:generationGroup.map((member,idx)=>{// member.party の値によって画像のソースと alt を決定\nconst imgSrc=member.party===\"syomen\"?\"/kyudobu_img/syoumen1.jpg\":\"/kyudobu_img/shamen.jpg\";const imgAlt=member.party===\"syomen\"?\"正面打起し\":\"斜面打起し\";// member.gender によりクラス名を決定\nconst nameClass=member.gender==='man'?'man-C':'woman-C';return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-set\",children:[/*#__PURE__*/_jsx(\"img\",{src:imgSrc,alt:imgAlt}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:`profile-name ${nameClass}`,children:member.name}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-position\",children:member.post}),/*#__PURE__*/_jsx(\"div\",{className:\"profile-department\",children:member.department})]})]},member._id||`${member.name}-${idx}`);})})]},generationKey);})})]})});}export default OBOGProfilePage;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","OBOGProfilePage","members","setMembers","loading","setLoading","error","setError","fetch","then","response","ok","Error","json","data","catch","err","console","currentYear","Date","getFullYear","getMonth","maxGeneration","groupsByGeneration","generation","forEach","member","memberGeneration","Number","push","children","id","className","src","alt","Object","keys","sort","a","b","map","generationKey","generationGroup","length","href","style","justifyContent","idx","imgSrc","party","imgAlt","nameClass","gender","name","post","department","_id"],"sources":["C:/Users/mygoodnote/OneDrive - 東京都市大学 Tokyo City University/デスクトップ/work/React/LoginSystem/client/src/pages/OBOGProfilePage.js"],"sourcesContent":["// src/pages/OBOGProfilePage.js\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction OBOGProfilePage() {\r\n  const [members, setMembers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // コンポーネントマウント時に API から部員データを取得\r\n  useEffect(() => {\r\n    fetch('/api/members')\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('ネットワークエラーです');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setMembers(data);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error('データ取得エラー:', err);\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  // 現在の年から1965を引いた値を上限としてグループを作成する\r\n  let currentYear = new Date().getFullYear();\r\n  // 現在の月が1月～3月の場合（month: 0～2）なら、まだ4月になっていないので、前年度を学年として扱う\r\n  if (new Date().getMonth() < 3) {\r\n    currentYear = currentYear - 1;\r\n  }\r\n  const maxGeneration = currentYear - 1965; // 例：2025年なら95\r\n\r\n\r\n  // 1 〜maxGeneration までの各年齢ごとに空の配列を初期化\r\n  const groupsByGeneration = {};\r\n  for (let generation = 1; generation <= maxGeneration; generation++) {\r\n    groupsByGeneration[generation] = [];\r\n  }\r\n  // 読み込んだ各部員の generation（文字列なので Number() で変換）をキーとしてグループ化\r\n  members.forEach(member => {\r\n    const memberGeneration = Number(member.generation);\r\n    // 1〜maxGeneration の範囲内ならグループに追加\r\n    if (memberGeneration >= 1 && memberGeneration <= maxGeneration) {\r\n      groupsByGeneration[memberGeneration].push(member);\r\n    }\r\n  });\r\n\r\n  if (loading) {\r\n    return <p>データを読み込み中です…</p>;\r\n  }\r\n  if (error) {\r\n    return <p>データの取得に失敗しました。</p>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"profile\" className=\"big-bg\">\r\n      <div className=\"profile-content\">\r\n        <div className=\"profile-explain\">\r\n          <div>\r\n            <img src=\"/kyudobu_img/shamen.jpg\" alt=\"斜面打起し\" />\r\n            <h2>現在斜面打起しで引いている方</h2>\r\n          </div>\r\n          <div>\r\n            <img src=\"/kyudobu_img/syoumen1.jpg\" alt=\"正面打起し\"></img>\r\n            <h2>現在正面打起しで引いている方</h2>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"sub-menu\">\r\n          <h4>メニュー</h4>\r\n\r\n          <div>\r\n            {Object.keys(groupsByGeneration)\r\n              .sort((a, b) => Number(b) - Number(a)) // 数値として降順にソート\r\n              .map(generationKey => {\r\n                const generationGroup = groupsByGeneration[generationKey];\r\n                if (generationGroup.length === 0) return null; // その年齢の部員がいなければ表示しない\r\n                return (\r\n                  <li key={generationKey}>\r\n                    <a href={`#${generationKey}generation`}>{generationKey}代</a>\r\n                  </li>\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <p>名簿が手に入り次第、随時更新していきます。</p>\r\n        </div>\r\n\r\n        <div className=\"profile-generation\">\r\n          <p>監督・コーチ・顧問</p>\r\n        </div>\r\n        <div className=\"profile-table\" style={{ justifyContent: 'space-around' }}>\r\n          <div className=\"profile-set\">\r\n            <img src=\"/kyudobu_img/shamen.jpg\" alt=\"斜面打起し\" />\r\n            <div className=\"profile-item\">\r\n              <div className=\"profile-name man-C\">渡辺 洋</div>\r\n              <div className=\"profile-position\">監督</div>\r\n              <div className=\"profile-department\">----</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-set\">\r\n            <img src=\"/kyudobu_img/shamen.jpg\" alt=\"斜面打起し\" />\r\n            <div className=\"profile-item\">\r\n              <div className=\"profile-name man-C\">二見 富士夫</div>\r\n              <div className=\"profile-position\">コーチ・会計</div>\r\n              <div className=\"profile-department\">----</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-set\">\r\n            <img src=\"/kyudobu_img/shamen.jpg\" alt=\"斜面打起し\" />\r\n            <div className=\"profile-item\">\r\n              <div className=\"profile-name man-C\">佐藤 明博</div>\r\n              <div className=\"profile-position\">コーチ</div>\r\n              <div className=\"profile-department\">----</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-set\">\r\n            <img src=\"/kyudobu_img/shamen.jpg\" alt=\"斜面打起し\" />\r\n            <div className=\"profile-item\">\r\n              <div className=\"profile-name man-C\">佐藤 秀憲</div>\r\n              <div className=\"profile-position\">コーチ</div>\r\n              <div className=\"profile-department\">----</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile-set\">\r\n            <img src=\"/kyudobu_img/shiro.jpg\" alt=\"白\" />\r\n            <div className=\"profile-item\">\r\n              <div className=\"profile-name man-C\">白木 尚人</div>\r\n              <div className=\"profile-position\">顧問(教授)</div>\r\n              <div className=\"profile-department\">機械工学科</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* ここから、年齢ごとのグループ表示 */}\r\n        <div>\r\n          {Object.keys(groupsByGeneration)\r\n            .sort((a, b) => Number(b) - Number(a)) // 数値として降順にソート\r\n            .map(generationKey => {\r\n              const generationGroup = groupsByGeneration[generationKey];\r\n              if (generationGroup.length === 0) return null; // その年齢の部員がいなければ表示しない\r\n\r\n              return (\r\n                <div key={generationKey} className=\"profile-group\">\r\n                  <div id={`${generationKey}generation`} className=\"profile-year\"></div>\r\n                  <div className=\"profile-generation\">\r\n                    <p>{generationKey}代</p>\r\n                  </div>\r\n                  <div className=\"profile-table\">\r\n                    {generationGroup.map((member, idx) => {\r\n                      // member.party の値によって画像のソースと alt を決定\r\n                      const imgSrc =\r\n                        member.party === \"syomen\"\r\n                          ? \"/kyudobu_img/syoumen1.jpg\"\r\n                          : \"/kyudobu_img/shamen.jpg\";\r\n                      const imgAlt =\r\n                        member.party === \"syomen\"\r\n                          ? \"正面打起し\"\r\n                          : \"斜面打起し\";\r\n                      // member.gender によりクラス名を決定\r\n                      const nameClass = member.gender === 'man' ? 'man-C' : 'woman-C';\r\n                      return (\r\n                        <div key={member._id || `${member.name}-${idx}`} className=\"profile-set\">\r\n                          <img src={imgSrc} alt={imgAlt} />\r\n                          <div className=\"profile-item\">\r\n                            <div className={`profile-name ${nameClass}`}>\r\n                              {member.name}\r\n                            </div>\r\n                            <div className=\"profile-position\">{member.post}</div>\r\n                            <div className=\"profile-department\">{member.department}</div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OBOGProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}